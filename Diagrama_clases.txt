El diagrama de Clases desarrollado se encuentra en el siguiente link:

https://drive.google.com/file/d/1enEB9pZr0XyUZWrq1L-EAMAxoowtXpAY/view?usp=sharing

Explicacion de las Clases
Usuario: Representa a una persona registrada en el sistema.
Atributos:

● id_user: identificador único.

● nombre: nombre del usuario.

● email: correo del usuario.

● password: contraseña (validada por seguridad).

● id_rol: indica qué rol tiene (se relaciona con la clase Rol).

Rol: Define los permisos que puede tener un usuario.
Atributos:

● id_rol: ID del rol.

● rol: nombre del rol (por ejemplo, "admin" o "estándar").

GestorUsuarios: Es la clase que gestiona toda la lógica del sistema con respecto a los usuarios.
Atributos:

● usuarios: lista de objetos de tipo Usuario.

● roles: lista de roles disponibles.

Métodos:

● registrar_usuario(), ver_usuarios(), modificar_usuario(), eliminar_usuario()

● ver_mis_datos(usuario)

● obtener_nombre_rol(id_rol)

Sistema: Encargado del flujo principal del programa.
Atributo:

● gestor: instancia de GestorUsuarios.

● Métodos:

● login(): para iniciar sesión.

● mostrar_menu(): muestra menú según el rol del usuario.

Conectores y relaciones UML
Sistema → GestorUsuarios

Tipo: Composición (rombo negro)

Multiplicidad: 1 → 1

Significado: El sistema contiene una única instancia de GestorUsuarios. Si el sistema muere, el gestor también.

GestorUsuarios → Usuario Tipo: Agregación (rombo blanco)

Multiplicidad: 1 → * (uno a muchos)

Significado: Un gestor puede manejar muchos usuarios. Si el gestor se borra, los usuarios podrían existir por separado (por ejemplo, si se guardan en un archivo).

Usuario → Rol Tipo: Asociación

Multiplicidad: * → 1 (muchos a uno)

Significado: Cada usuario tiene un único rol, pero un mismo rol puede estar asignado a varios usuarios.
